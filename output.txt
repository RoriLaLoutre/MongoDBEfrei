
======================================================================================

Contenu du fichier : Config\database.js

======================================================================================
import mongoose from "mongoose";
const connectDB = async () => {
    try {
      await mongoose.connect("mongodb://localhost:27017/local", {
        useNewUrlParser: true,
        useUnifiedTopology: true,
      });
      console.log("DB connecté");
    } catch (error) {
      console.error("Erreur de connexion à la DB :", error);
      process.exit(1);
    }
  };
  export default connectDB;0
======================================================================================

Contenu du fichier : Controllers\ambassy.controller.js

======================================================================================
import mongoose from "mongoose";
import Ambassy from "../Models/ambassy.model.js";


export async function getAllDiplomat(req, res, next) {
  try {
    const allDiplomat = await Ambassy.find();
    res.status(200).json(allDiplomat);
  } catch (error) {
    res.status(500).json({ message: error.message });
  }
};

export async function get20Diplomat(req, res, next) {
  try {
    const allDiplomat = await Ambassy.find().limit(20);
    res.status(200).json(allDiplomat);
  } catch (error) {
    res.status(500).json({ message: error.message });
  }
};

export async function addAmbassy(req, res, next) {
  try {
    const {
        pays,
        type,
        nom,
        adresse,
        ville,
        code_postal,
        telephone,
        fax,
        courriel,
        url,
        latitude,
        longitude,
        iso2,
        socials
    } = req.body;

    if (!pays || !type || !nom || !adresse || !ville || !latitude || !longitude || !iso2) {
        return res.status(400).json({ message: "Les champs obligatoires doivent être remplis." });
    }

    const newAmbassy = new Ambassy({
        _id: new mongoose.Types.ObjectId(),
        pays,
        type,
        nom,
        adresse,
        ville,
        code_postal: code_postal || null,
        telephone: telephone || null,
        fax: fax || null,
        courriel: courriel || null,
        url: url || null,
        latitude,
        longitude,
        socials: socials || {},
        iso2,
    });

    await newAmbassy.save();
    res.status(201).json({ message: "Ambassade ajoutée avec succès"});
} catch (error) {
    res.status(500).json({ message: "Erreur serveur"});
}
}


export async function getid(req, res, next) {
  const id = req.params.id;
  try {
    const getid = await Ambassy.find({ _id: id });
    res.status(200).json(getid);
  } catch (error) {
    res.status(500).json({ message: error.message });
  }
};


export async function getBYiso(req, res, next) {
  const iso2 = req.params.iso2;
  try {
    const getiso2 = await Ambassy.find({ iso2: iso2 });
    res.status(200).json(getiso2);
  } catch (error) {
    res.status(500).json({ message: error.message });
  }
};

export async function getBYcity(req, res, next) {
  const city = req.params.city;
  try {
    const getcity = await Ambassy.find({ ville: city });
    res.status(200).json(getcity);
  } catch (error) {
    res.status(500).json({ message: error.message });
  }
};
0
======================================================================================

Contenu du fichier : Controllers\index.controller.js

======================================================================================
export * as AmbassyController from './ambassy.controller.js';0
======================================================================================

Contenu du fichier : Models\ambassy.model.js

======================================================================================
import mongoose from "mongoose";

const AmbassySchema = new mongoose.Schema({
  _id: mongoose.Schema.Types.ObjectId, // Identifiant MongoDB
  id: { type: Number, required: true }, // ID numérique unique
  pays: { type: String, required: true }, // Nom du pays
  type: { type: String, required: true }, // Type de représentation (ex: ambassade)
  nom: { type: String, required: true }, // Nom complet
  adresse: { type: String, required: true }, // Adresse
  ville: { type: String, required: true }, // Ville
  code_postal: { type: String, default: null }, // Code postal (nullable)
  telephone: { type: String, default: null }, // Téléphone
  fax: { type: String, default: null }, // Fax
  courriel: { type: String, default: null }, // Email
  url: { type: String, default: null }, // Lien officiel
  latitude: { type: Number, required: true }, // Coordonnée latitude
  longitude: { type: Number, required: true }, // Coordonnée longitude
  socials: {
    type: Map, // Un objet clé-valeur dynamique
    of: new mongoose.Schema({
      type: { type: String, required: true }, // Type de réseau social (ex: "facebook")
      url: { type: String, required: true }, // URL du réseau social
      url_complet: { type: String, required: true } // Lien HTML complet
    }, { _id: false }) // Empêche d'ajouter un _id pour chaque sous-document
  },
  iso2: { type: String, required: true }, // Code ISO du pays
  date_ajout: { type: Date, required: true }, // Date d'ajout
});


const Ambassy = mongoose.model("Ambassy", AmbassySchema, "ambassade");
export default Ambassy;

0
======================================================================================

Contenu du fichier : routers\ambassade.router.js

======================================================================================
import express from "express";
import {AmbassyController} from "../Controllers/index.controller.js";
import path from 'path';
import { fileURLToPath } from 'url';
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);


const router = express.Router();

router.get("/", AmbassyController.getAllDiplomat);
router.get("/all20", AmbassyController.get20Diplomat);
//router.post("/add", AmbassyController.addAmbassy);
//router.put("/update/:id", AmbassyController.updateAmbassy);
//router.delete("/delete/:id", AmbassyController.deleteAmbassy);
// Route pour afficher le formulaire
router.post('/add', (req, res) => {
    res.sendFile(path.join(__dirname, 'views', 'add_form.html'),
    AmbassyController.addAmbassy);
    });
router.get("/:id", AmbassyController.getid);

router.get("/search/iso/:iso2", AmbassyController.getBYiso);
router.get("/search/city/:city", AmbassyController.getBYcity);





export default router;
0
======================================================================================

Contenu du fichier : server.js

======================================================================================
import express from "express";
import connectDB from "./Config/database.js";
import router from "./routers/ambassade.router.js";
import path from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

const app = express();

app.use(express.json());
app.use(express.urlencoded({ extended: true }));
app.use(express.static(path.join(__dirname, 'public')));
connectDB();

app.use("/api/ambassade" , router);


app.listen(3000, () => console.log("Server listen on http://localhost:3000/api/ambassade/"));0
======================================================================================

Contenu du fichier : views\add_form.html

======================================================================================
<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Ajouter une Ambassade</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@picocss/pico@2/css/pico.min.css">
    <link rel="stylesheet" href="style/style.css">
</head>
<body>
    <h2>Ajouter une Ambassade</h2>
    <form id="ambassyForm">
        <label>Pays :</label>
        <input type="text" name="pays" required><br><br>

        <label>Type :</label>
        <input type="text" name="type" required><br><br>

        <label>Nom :</label>
        <input type="text" name="nom" required><br><br>

        <label>Adresse :</label>
        <input type="text" name="adresse" required><br><br>

        <label>Ville :</label>
        <input type="text" name="ville" required><br><br>

        <label>Code Postal :</label>
        <input type="text" name="code_postal"><br><br>

        <label>Téléphone :</label>
        <input type="text" name="telephone"><br><br>

        <label>Fax :</label>
        <input type="text" name="fax"><br><br>

        <label>Courriel :</label>
        <input type="email" name="courriel"><br><br>

        <label>URL :</label>
        <input type="url" name="url"><br><br>

        <label>Latitude :</label>
        <input type="number" name="latitude" step="any" required><br><br>

        <label>Longitude :</label>
        <input type="number" name="longitude" step="any" required><br><br>

        <label>Code ISO :</label>
        <input type="text" name="iso2" required><br><br>

        <button type="submit">Ajouter</button>
    </form>0
======================================================================================

Contenu du fichier : views\style\style.css

======================================================================================
form{
    width: 70%;
    margin-left: 15%;
}0